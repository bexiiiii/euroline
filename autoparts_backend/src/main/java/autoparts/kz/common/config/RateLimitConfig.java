package autoparts.kz.common.config;

import io.github.bucket4j.Bandwidth;
import io.github.bucket4j.Bucket;
import io.github.bucket4j.BucketConfiguration;
import io.github.bucket4j.Refill;
import io.github.bucket4j.redis.lettuce.cas.LettuceBasedProxyManager;
import io.lettuce.core.RedisClient;
import io.lettuce.core.api.StatefulRedisConnection;
import lombok.RequiredArgsConstructor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.redis.connection.RedisConnectionFactory;

import java.time.Duration;

/**
 * üöÄ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Rate Limiting –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç DDoS-–∞—Ç–∞–∫ –∏ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è API.
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Bucket4j —Å Redis backend –¥–ª—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ rate limiting.
 * –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å—á–µ—Ç—á–∏–∫–æ–≤.
 */
@Configuration
@RequiredArgsConstructor
public class RateLimitConfig {

    private final RedisConnectionFactory redisConnectionFactory;

    /**
     * –°–æ–∑–¥–∞–µ—Ç Rate Limit Bucket –¥–ª—è –æ–±—â–∏—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤.
     * –õ–∏–º–∏—Ç: 1000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É –Ω–∞ IP –∞–¥—Ä–µ—Å.
     * 
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞—â–∏—Ç—ã –≤—Å–µ—Ö –ø—É–±–ª–∏—á–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –æ—Ç –º–∞—Å—Å–æ–≤—ã—Ö –∞—Ç–∞–∫.
     */
    public static BucketConfiguration defaultBucketConfiguration() {
        return BucketConfiguration.builder()
                .addLimit(Bandwidth.builder()
                        .capacity(1000) // –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤ –≤ bucket
                        .refillGreedy(1000, Duration.ofMinutes(1)) // –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ 1000 —Ç–æ–∫–µ–Ω–æ–≤ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
                        .build())
                .build();
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç Rate Limit Bucket –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
     * –õ–∏–º–∏—Ç: 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É –Ω–∞ IP –∞–¥—Ä–µ—Å.
     * 
     * –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –±–æ–ª–µ–µ —Ä–µ—Å—É—Ä—Å–æ–µ–º–∫–∏–µ, –ø–æ—ç—Ç–æ–º—É –ª–∏–º–∏—Ç –Ω–∏–∂–µ.
     */
    public static BucketConfiguration searchBucketConfiguration() {
        return BucketConfiguration.builder()
                .addLimit(Bandwidth.builder()
                        .capacity(100) // –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤
                        .refillGreedy(100, Duration.ofMinutes(1)) // –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
                        .build())
                .build();
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç Rate Limit Bucket –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
     * –õ–∏–º–∏—Ç: 10 –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞ –≤ –º–∏–Ω—É—Ç—É –Ω–∞ IP –∞–¥—Ä–µ—Å.
     * 
     * –ó–∞—â–∏—Ç–∞ –æ—Ç brute-force –∞—Ç–∞–∫ –Ω–∞ –ª–æ–≥–∏–Ω.
     */
    public static BucketConfiguration authBucketConfiguration() {
        return BucketConfiguration.builder()
                .addLimit(Bandwidth.builder()
                        .capacity(10) // –¢–æ–ª—å–∫–æ 10 –ø–æ–ø—ã—Ç–æ–∫
                        .refillGreedy(10, Duration.ofMinutes(1)) // –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
                        .build())
                .build();
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç Rate Limit Bucket –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞–∫–∞–∑–æ–≤.
     * –õ–∏–º–∏—Ç: 20 –∑–∞–∫–∞–∑–æ–≤ –≤ —á–∞—Å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * 
     * –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∞–º-–∑–∞–∫–∞–∑–æ–≤.
     */
    public static BucketConfiguration orderBucketConfiguration() {
        return BucketConfiguration.builder()
                .addLimit(Bandwidth.builder()
                        .capacity(20) // –ú–∞–∫—Å–∏–º—É–º 20 –∑–∞–∫–∞–∑–æ–≤
                        .refillGreedy(20, Duration.ofHours(1)) // –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å
                        .build())
                .build();
    }
}
