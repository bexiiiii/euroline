server:
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: always   # добавлено: видеть стектрейсы в ответах об ошибках (на dev)
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20000
    max-connections: 8192
    accept-count: 100

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 12MB
  datasource:
    url: jdbc:postgresql://localhost:5432/autoparts
    username: postgres
    password: 234Bex456
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  task:
    scheduling:
      enabled: true  # Включаем scheduled tasks
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
    open-in-view: false
  redis:
    host: localhost
    port: 6379
    password: ""
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: autoparts-consumers
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topics:
      inventory-delta: 1c.inventory.delta
      inventory-snapshot: 1c.inventory.snapshot
      inventory-query-request: 1c.inventory.query.request
      inventory-query-reply: 1c.inventory.query.reply
      order-request: 1c.order.request
      order-response: 1c.order.response
      order-created: order.created.v1
      stock-reserved: stock.reserved.v1
      stock-rejected: stock.rejected.v1
      group: autoparts
  liquibase:
    enabled: true  # включено для автоматического добавления пользователя admin
    change-log: classpath:db/changelog/db.changelog-master.yaml
  mvc:
    log-request-details: true    # добавлено: логировать заголовки/параметры запросов

kafka:
  bootstrap-servers: ${spring.kafka.bootstrap-servers}
  topics:
    order-created: ${spring.kafka.topics.order-created}
    stock-reserved: ${spring.kafka.topics.stock-reserved}
    stock-rejected: ${spring.kafka.topics.stock-rejected}
  group: ${spring.kafka.topics.group}

topics:
  inventory-delta: ${spring.kafka.topics.inventory-delta}
  inventory-snapshot: ${spring.kafka.topics.inventory-snapshot}
  inventory-query-request: ${spring.kafka.topics.inventory-query-request}
  inventory-query-reply: ${spring.kafka.topics.inventory-query-reply}
  order-request: ${spring.kafka.topics.order-request}
  order-response: ${spring.kafka.topics.order-response}
  order-created: ${spring.kafka.topics.order-created}
  stock-reserved: ${spring.kafka.topics.stock-reserved}
  stock-rejected: ${spring.kafka.topics.stock-rejected}

onec:
  base-url: http://onec.local


outbox:
  publisher:
    delay-ms: 5000  # Увеличен интервал для development (5 секунд)

# Конфигурация интеграции с 1С
oneC:
  api:
    url: ${ONEC_API_URL:http://localhost:8081/api/1c}
    username: ${ONEC_USERNAME:admin}
    password: ${ONEC_PASSWORD:password}
  connection:
    timeout: 10000

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:5173}

security:
  jwt:
    secret: ${JWT_SECRET:this-is-a-very-long-and-secure-jwt-secret-key-for-production-use-change-this-in-production-environment}
    expiration-ms: ${JWT_EXPIRATION_MS:86400000}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true

laximo:
  cat:
    soap-url: "https://ws.laximo.ru/ec.Kito.WebCatalog/services/Catalog.CatalogHttpSoap12Endpoint/"
    login: "am657904"
    password: "9z3n_AyzyZ24RAI"
    locale: "ru_RU"

# Настройки для production (закомментированы)
# spring:
#   jpa:
#     show-sql: false  # Отключить на продакшене
#     properties:
#       hibernate:
#         format_sql: false
#         jdbc.batch_size: 50
#         order_inserts: true
#         order_updates: true
#         jdbc.batch_versioned_data: true



---
# Local Postgres profile to use a real DB and auto-create/update schema
spring:
  config:
    activate:
      on-profile: local
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
  liquibase:
    enabled: true



---
# In-memory H2 profile for fast testing
spring:
  config:
    activate:
      on-profile: h2
  datasource:
    url: jdbc:h2:mem:autoparts;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    show-sql: true
  liquibase:
    enabled: false

logging:
  level:
    root: DEBUG
    org.springframework: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.data: DEBUG
    org.hibernate.SQL: DEBUG

    # исправлено для Hibernate 6:
    # раньше было org.hibernate.type.descriptor.sql (устаревший логгер)
    org.hibernate.type.descriptor.jdbc: TRACE   # типы/преобразования
    org.hibernate.orm.jdbc.bind: TRACE          # значения подставленных параметров (? -> value)
